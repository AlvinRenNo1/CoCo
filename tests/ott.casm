Function: main/0
Constants: None, "Enter an integer: ", "Please enter an integer.", 2, 0, -2, 0, 1
Locals: num, lst, step, i
Globals: int, input, print, range, append, print
BEGIN
            LOAD_CONST              0
            STORE_FAST              0           ; num = None
            SETUP_LOOP              afterwhile
startwhile: LOAD_FAST               0
            POP_JUMP_IF_TRUE        endwhile
            SETUP_EXCEPT            except
            LOAD_GLOBAL             0
            LOAD_GLOBAL             1
            LOAD_CONST              1
            CALL_FUNCTION           1
            CALL_FUNCTION           1
            STORE_FAST              0           ; num = int(input("Enter an integer: "))
            POP_BLOCK
            JUMP_ABSOLUTE           startwhile
except:     POP_TOP
            POP_TOP
            POP_TOP
            LOAD_GLOBAL             2
            LOAD_CONST              2
            CALL_FUNCTION           1           ; print("Please enter an integer.")
            POP_TOP
            POP_EXCEPT
            JUMP_ABSOLUTE           startwhile
            END_FINALLY
            JUMP_ABSOLUTE           startwhile
endwhile:   POP_BLOCK
afterwhile: BUILD_LIST              0
            STORE_FAST              1           ; lst = []
            LOAD_CONST              3
            STORE_FAST              2           ; step = 2
            LOAD_FAST               0
            LOAD_CONST              0
            COMPARE_OP              0           ; num < 0
            POP_JUMP_IF_FALSE       notlabel
            LOAD_CONST              5
            STORE_FAST              2           ; step = -2
notlabel:   SETUP_LOOP              afterfor
            LOAD_GLOBAL             3
            LOAD_CONST              6
            LOAD_FAST               0
            LOAD_CONST              7
            BINARY_ADD
            LOAD_FAST               2
            CALL_FUNCTION           3
            GET_ITER                            ; range(0, num+1, step)
startfor:   FOR_ITER                endfor
            STORE_FAST              3           ; i in
            LOAD_FAST               1
            LOAD_ATTR               4
            LOAD_FAST               1
            CALL_FUNCTION           1           ; lst.append(i)
            POP_TOP
            JUMP_ABSOLUTE           startfor
endfor:     POP_BLOCK            
afterfor:   LOAD_GLOBAL             5
            LOAD_FAST               1
            CALL_FUNCTION           1           ; print(lst)
            POP_TOP
            LOAD_CONST
            RETURN_VALUE
END
